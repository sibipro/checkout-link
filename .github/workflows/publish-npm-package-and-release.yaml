name: Publish and Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["package.json", ".github/workflows/**"]

jobs:
  test:
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - run: npm run test:build

  build:
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - run: npm run build --declaration
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish_npm:
    needs: [test, build]
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm

    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Get version and package name
        id: version
        run: |
          version=$(node -p "require('./package.json').version")
          package_name=$(node -p "require('./package.json').name")
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "package_name=$package_name" >> $GITHUB_OUTPUT
      - run: |
          npm publish --access public
          NPM_TOKEN=$GITHUB_TOKEN npm publish --access public --registry https://npm.pkg.github.com
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Trigger monorepo PRs
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          event-type: npm-package-published
          client-payload: '{"version": "v${{ steps.version.outputs.version }}", "package_name": "${{ steps.version.outputs.package_name }}"}'

  upload_release:
    needs: [test, build]

    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - uses: softprops/action-gh-release@v2.2.1
        with:
          files: dist/**
          tag_name: v${{ steps.version.outputs.version }}
          body: "Release v${{ steps.version.outputs.version }}. This is an automated update from: [${{ github.repository }}](${{github.repositoryUrl}})"
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }} # this is needed bc otherwise the PR action silently fails, as Github checks if the release was made with the repo's token and does not trigger to prevent recursive workflow runs. Silently. Awesome.
