name: Update Monorepos Dependency

on:
  repository_dispatch:
    types: [npm-package-published]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-pnpm:
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    strategy:
      matrix:
        monorepo: ["sibipro/biggie"]
      fail-fast: true
    steps:
      - name: Checkout ${{ matrix.monorepo }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.monorepo }}
          token: ${{ secrets.PAT_TOKEN }}
          ref: main
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack
        run: corepack enable

      - name: Update Dependency with pnpm
        run: pnpm update -r "${{ github.event.client_payload.package_name }}@${{ github.event.client_payload.version }}" --prod

  update-yarn:
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    strategy:
      matrix:
        monorepo: ["sibipro/sibi"]
      fail-fast: true
    steps:
      - name: Checkout ${{ matrix.monorepo }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.monorepo }}
          token: ${{ secrets.PAT_TOKEN }}
          ref: main
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack
        run: corepack enable

      - name: Update Dependency with yarn
        run: yarn upgrade "${{ github.event.client_payload.package_name }}@${{ github.event.client_payload.version }}"

  create-pr:
    needs: [update-pnpm, update-yarn]
    if: always() && (needs.update-pnpm.result == 'success' || needs.update-yarn.result == 'success')
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    strategy:
      matrix:
        monorepo: ["sibipro/biggie", "sibipro/sibi"]
    steps:
      - name: Create Pull Request
        uses: ./.github/actions/create-dependency-pr
        with:
          token: ${{ secrets.PAT_TOKEN }}
          package-name: ${{ github.event.client_payload.package_name }}
          version: ${{ github.event.client_payload.version }}
          target-repo: ${{ matrix.monorepo }}
