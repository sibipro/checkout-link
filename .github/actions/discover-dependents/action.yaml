name: "Discover Dependent Repositories"
description: "Finds repositories that depend on a package using GitHub's dependency graph"

inputs:
  token:
    description: "GitHub token with repo scope"
    required: true
  package-name:
    description: "Package to find dependents for"
    required: true
  org:
    description: "GitHub organization to search"
    required: true
    default: "sibipro"

outputs:
  matrix:
    description: "JSON array of dependent repositories and their package managers"
    value: ${{ steps.set-matrix.outputs.matrix }}

runs:
  using: "composite"
  steps:
    - name: Query Dependencies
      id: query
      shell: bash
      run: |
        response=$(gh api graphql -f query='
          query($org: String!, $package: String!) {
            organization(login: $org) {
              repositories(first: 100, privacy: PRIVATE) {
                nodes {
                  name
                  url
                  dependencyGraphManifests(first: 100) {
                    nodes {
                      dependencies(first: 100) {
                        nodes {
                          packageName
                        }
                      }
                    }
                  }
                }
              }
            }
          }' -f org=${{ inputs.org }} -f package=${{ inputs.package-name }})
        echo "response=$response" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Process Dependencies
      id: set-matrix
      shell: bash
      run: |
        # Extract repos that depend on the package and detect their package manager
        matrix=$(echo '${{ steps.query.outputs.response }}' | jq -r '
          .data.organization.repositories.nodes[] |
          select(.dependencyGraphManifests.nodes[].dependencies.nodes[].packageName == "${{ inputs.package-name }}") |
          { repo: .name, url: .url }
        ' | jq -s '{ include: . }')
        echo "matrix=$matrix" >> $GITHUB_OUTPUT
